package com.codename1.auth0.tests;


import com.codename1.auth0.LockManager;
import com.codename1.auth0.LoginCallback;
import com.codename1.auth0.UserProfile;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Button;
import com.codename1.ui.Command;
import com.codename1.ui.Toolbar;
import com.codename1.ui.layouts.BorderLayout;
import java.io.IOException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class Auth0Test {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Auth0 Demo");
        hi.setLayout(new BorderLayout());

        hi.add(BorderLayout.SOUTH, new Button(Command.create("Sign In", null, e -> {
            if(LockManager.getInstance().isSupported()){
                LockManager.getInstance().showLockScreen(new LoginCallback() {

                    @Override
                    public void loggedIn(String token, UserProfile p) {
                        System.out.println("LoggedIn!!!!!!!!!!");
                        System.out.println("token " + token);
                        System.out.println("name " + p.getName());

                    }
                });
            }

        })));
        hi.show();
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
